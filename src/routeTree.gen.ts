/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as UTGUIImport } from './routes/UTGUI'
import { Route as SonarQubeHotspotCopierImport } from './routes/SonarQubeHotspotCopier'
import { Route as SanityDashboardImport } from './routes/SanityDashboard'
import { Route as MFBSearchImport } from './routes/MFBSearch'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const UTGUIRoute = UTGUIImport.update({
  id: '/UTGUI',
  path: '/UTGUI',
  getParentRoute: () => rootRoute,
} as any)

const SonarQubeHotspotCopierRoute = SonarQubeHotspotCopierImport.update({
  id: '/SonarQubeHotspotCopier',
  path: '/SonarQubeHotspotCopier',
  getParentRoute: () => rootRoute,
} as any)

const SanityDashboardRoute = SanityDashboardImport.update({
  id: '/SanityDashboard',
  path: '/SanityDashboard',
  getParentRoute: () => rootRoute,
} as any)

const MFBSearchRoute = MFBSearchImport.update({
  id: '/MFBSearch',
  path: '/MFBSearch',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/MFBSearch': {
      id: '/MFBSearch'
      path: '/MFBSearch'
      fullPath: '/MFBSearch'
      preLoaderRoute: typeof MFBSearchImport
      parentRoute: typeof rootRoute
    }
    '/SanityDashboard': {
      id: '/SanityDashboard'
      path: '/SanityDashboard'
      fullPath: '/SanityDashboard'
      preLoaderRoute: typeof SanityDashboardImport
      parentRoute: typeof rootRoute
    }
    '/SonarQubeHotspotCopier': {
      id: '/SonarQubeHotspotCopier'
      path: '/SonarQubeHotspotCopier'
      fullPath: '/SonarQubeHotspotCopier'
      preLoaderRoute: typeof SonarQubeHotspotCopierImport
      parentRoute: typeof rootRoute
    }
    '/UTGUI': {
      id: '/UTGUI'
      path: '/UTGUI'
      fullPath: '/UTGUI'
      preLoaderRoute: typeof UTGUIImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/MFBSearch': typeof MFBSearchRoute
  '/SanityDashboard': typeof SanityDashboardRoute
  '/SonarQubeHotspotCopier': typeof SonarQubeHotspotCopierRoute
  '/UTGUI': typeof UTGUIRoute
  '/about': typeof AboutRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/MFBSearch': typeof MFBSearchRoute
  '/SanityDashboard': typeof SanityDashboardRoute
  '/SonarQubeHotspotCopier': typeof SonarQubeHotspotCopierRoute
  '/UTGUI': typeof UTGUIRoute
  '/about': typeof AboutRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/MFBSearch': typeof MFBSearchRoute
  '/SanityDashboard': typeof SanityDashboardRoute
  '/SonarQubeHotspotCopier': typeof SonarQubeHotspotCopierRoute
  '/UTGUI': typeof UTGUIRoute
  '/about': typeof AboutRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/MFBSearch'
    | '/SanityDashboard'
    | '/SonarQubeHotspotCopier'
    | '/UTGUI'
    | '/about'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/MFBSearch'
    | '/SanityDashboard'
    | '/SonarQubeHotspotCopier'
    | '/UTGUI'
    | '/about'
  id:
    | '__root__'
    | '/'
    | '/MFBSearch'
    | '/SanityDashboard'
    | '/SonarQubeHotspotCopier'
    | '/UTGUI'
    | '/about'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MFBSearchRoute: typeof MFBSearchRoute
  SanityDashboardRoute: typeof SanityDashboardRoute
  SonarQubeHotspotCopierRoute: typeof SonarQubeHotspotCopierRoute
  UTGUIRoute: typeof UTGUIRoute
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MFBSearchRoute: MFBSearchRoute,
  SanityDashboardRoute: SanityDashboardRoute,
  SonarQubeHotspotCopierRoute: SonarQubeHotspotCopierRoute,
  UTGUIRoute: UTGUIRoute,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/MFBSearch",
        "/SanityDashboard",
        "/SonarQubeHotspotCopier",
        "/UTGUI",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/MFBSearch": {
      "filePath": "MFBSearch.tsx"
    },
    "/SanityDashboard": {
      "filePath": "SanityDashboard.tsx"
    },
    "/SonarQubeHotspotCopier": {
      "filePath": "SonarQubeHotspotCopier.tsx"
    },
    "/UTGUI": {
      "filePath": "UTGUI.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
